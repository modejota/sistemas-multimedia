package practicafinal;

import SM.JAGG.IU.Lienzo2D;
import java.awt.image.BufferedImage;

/**
 * Clase que representará aquellas ventanas internas donde se pueden visualizar figuars e imágenes
 * @author José Alberto Gómez García    modej@correo.ugr.es
 */
public class VentanaInternaImagen extends VentanaInternaSM {
 
    /**
     * Creates new form VentanaInterna. Constructor por defecto
     * @param str Título de la ventana interna
     */
    public VentanaInternaImagen(String str) {
        super(str);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBarrasDesplazamiento = new javax.swing.JScrollPane();
        lienzo = new SM.JAGG.IU.Lienzo2D();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        javax.swing.GroupLayout lienzoLayout = new javax.swing.GroupLayout(lienzo);
        lienzo.setLayout(lienzoLayout);
        lienzoLayout.setHorizontalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
        );
        lienzoLayout.setVerticalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 268, Short.MAX_VALUE)
        );

        panelBarrasDesplazamiento.setViewportView(lienzo);

        getContentPane().add(panelBarrasDesplazamiento, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método para obtener el lienzo asociado a la ventana
     * @return Lienzo asociado a la ventana
     */
    public Lienzo2D getLienzo() {
        return lienzo;
    }
    
    /**
     * Método para seleccionar/cargar una imagen de un cliente
     * @param bool Si la figura debe contener los cambios sobre las figuras o no
     * @return Imagen seleccioanda
     */
    @Override
    public BufferedImage getImage(boolean bool) {
        return lienzo.getImage(bool);
    }
    
    /**
     * Método para actualiazr la imagen desitinada de la Iglesia
     * @param img Imagen a activar
     */
    @Override
    public void setImage(BufferedImage img){
        this.lienzo.setImage(img);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private SM.JAGG.IU.Lienzo2D lienzo;
    private javax.swing.JScrollPane panelBarrasDesplazamiento;
    // End of variables declaration//GEN-END:variables
}
